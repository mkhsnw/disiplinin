// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  Project       Project[]
  Task          Task[]
  Comment       Comment[]
  ProjectMember ProjectMember[]
}

model Project {
  id            String          @id @default(uuid())
  name          String
  description   String?
  ownerId       String
  owner         User            @relation(fields: [ownerId], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  Task          Task[]
  ProjectMember ProjectMember[]
}

model Task {
  id          String     @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  projectId   String
  project     Project    @relation(fields: [projectId], references: [id])
  assigneeId  String?
  assignee    User?      @relation(fields: [assigneeId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Comment     Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  taskid    String
  task      Task     @relation(fields: [taskid], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model ProjectMember {
  id        String  @id @default(uuid())
  projectId String
  project   Project @relation(fields: [projectId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  role      Role    @default(MEMBER)
}

enum Role {
  MEMBER
  ADMIN
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}
